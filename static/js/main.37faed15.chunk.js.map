{"version":3,"sources":["misc/firebase.js","pages/Signin.js","context/ProfileContext.js","components/PrivateRoute.js","misc/custom-hooks.js","components/CreateChatroomBtn.js","components/EditableInput.js","misc/helper.js","components/dashboard/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/RoomsContext.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/CurrentRoom.context.js","components/chat-window/top/EditRoomDrawer.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/index.js","components/PresenceDot.js","components/chat-window/message/ProfileBtnModal.js","components/chat-window/message/IconBtnControl.js","components/chat-window/message/MessageItem.js","components/chat-window/message/index.js","components/chat-window/bottom/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRouter.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","Signin","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","profileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusDatabaseRef","authUnSub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeprops","Loader","center","vertical","size","content","speed","to","useModuleState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","InitialState","CreateChatroomBtn","formRef","useRef","formValue","setFormValue","onSubmit","current","check","newRoomData","admins","currentUser","push","info","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptymsg","wrapperClassName","initalProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditclick","p","onSaveclick","trimmed","trim","InputGroup","Input","getNameInitials","splitName","toUpperCase","split","length","transformToArrwithId","snapVal","Object","keys","map","roomId","id","getUserUpdate","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","AvatarProps","Avatar","circle","AvatarUploadBtn","img","setImg","avatarEditorRef","getBlob","canvas","resolve","reject","toBlob","blob","Error","acceptedFiles","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFiles","warning","image","width","height","border","borderRadius","rotate","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","linkWithPopup","Tag","closable","onClose","Dashboard","onSignout","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","roomContext","RoomProvider","rooms","setRooms","roomsRef","useRooms","RoomItem","room","lastmessage","datetime","Date","author","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentroom","selector","useContextSelector","EditRoomDrawer","chatId","useParams","v","emptyMsg","newName","newDesc","memo","RoomInfoBtnModal","Top","isAdmin","ButtonToolbar","getColor","presence","getText","toLocaleDateString","PresenceDot","Presence","setPresence","userStatusRef","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ProfileBtnModal","btnProps","shortName","memberSince","ConditionBadge","condition","Children","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","MessageItem","handleAdmin","handleLike","likes","likeCount","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthAdmin","isAuthor","canGrantAdmin","isLiked","canShowIcon","Message","messages","setMessages","isChatEmpty","canShowChat","mesgRef","adminsRef","transaction","admin","alertMsg","msgId","msgRef","msg","assembleMsg","Bottom","onSendClick","msgData","messageId","onKeyDown","keyCode","preventDefault","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canSidebarRender","exact","path","PublicRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37faed15.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyDQwu5xUvKVkupe8wwflYH2xBuKcUzAuO8\",\r\n    authDomain: \"chat-web-app-4b958.firebaseapp.com\",\r\n    projectId: \"chat-web-app-4b958\",\r\n    storageBucket: \"chat-web-app-4b958.appspot.com\",\r\n    messagingSenderId: \"820885800593\",\r\n    appId: \"1:820885800593:web:9aeb9815a5728aa5a86130\"\r\n  };\r\n\r\nconst app=  firebase.initializeApp(config);\r\nexport const auth =app.auth();\r\nexport const database=app.database();\r\nexport const storage=app.storage();\r\n","import React from 'react'\r\nimport firebase from 'firebase/app'\r\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite'\r\nimport { auth, database } from '../misc/firebase'\r\n\r\nconst Signin = () => {\r\n    \r\n    const signInWithProvider=async provider=>{\r\n        try{\r\n            const {additionalUserInfo,user}=await auth.signInWithPopup(provider);\r\n            \r\n            if(additionalUserInfo.isNewUser){\r\n                database.ref(`/profiles/${user.uid}`).set({\r\n                    name:user.displayName,\r\n                    createdAt:firebase.database.ServerValue.TIMESTAMP,\r\n                })\r\n            }\r\n\r\n\r\n            Alert.success('Signed In',4000);\r\n        }\r\n        catch(err){\r\n            Alert.error(err.message,4000);\r\n        }\r\n   \r\n   \r\n    }\r\n    const onFacebookSignIn=()=>{\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n    }\r\n\r\n    const onGoogleSignIn=()=>{\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n    }\r\n\r\n    return (\r\n        \r\n            <Container>\r\n                <Grid className='mt-page'>\r\n                    <Row>\r\n                        <Col xs={24} md={12} mdOffset={6}>\r\n                        <Panel>\r\n                            <div className='text-center'>\r\n                                <h2>Welcome to Chat</h2>\r\n                                <p>Progressive chat platform for neophytes</p>\r\n                            </div>\r\n                            <div className='mt-3'>\r\n                            <Button block color='blue' onClick={onFacebookSignIn}>\r\n                               <Icon icon='facebook'/> Continue with Facebook\r\n                            </Button>\r\n                            <Button block color='green' onClick={onGoogleSignIn}>\r\n                               <Icon icon='google'/> Continue with Google\r\n                            </Button>\r\n                            </div>\r\n                            \r\n                        </Panel>\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </Container>\r\n        \r\n    )\r\n\r\n    }    \r\n\r\n\r\nexport default Signin\r\n","\r\n\r\nimport React,{createContext,useState,useContext, useEffect} from 'react';\r\nimport firebase from 'firebase/app'\r\nimport { auth, database } from '../misc/firebase';\r\n\r\n\r\nexport const isOfflineForDatabase = {\r\n    state: 'offline',\r\n    last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n    state: 'online',\r\n    last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\n\r\n\r\nconst profileContext=createContext();\r\n\r\nexport const ProfileProvider=({children})=>{\r\n    const [profile,setProfile] =useState(null);\r\n    const [isLoading,setIsLoading]=useState(true);\r\n\r\n    useEffect(()=>{\r\n\r\n        let userRef;\r\n        let userStatusDatabaseRef;\r\n     \r\n        const authUnSub=auth.onAuthStateChanged(authObj=>{\r\n            if(authObj){\r\n               \r\n                userRef=database.ref(`/profiles/${authObj.uid}`);\r\n                userStatusDatabaseRef = database.ref(`/status/${authObj.uid}`);\r\n                userRef.on('value',snap=>{\r\n                    const {avatar,name,createdAt}=snap.val();\r\n                    const data={\r\n                        avatar,\r\n                        name,\r\n                        createdAt,\r\n                        uid:authObj.uid,\r\n                        email:authObj.email\r\n            \r\n                    }\r\n                    \r\n                setProfile(data);\r\n                setIsLoading(false); \r\n                    \r\n                })\r\n\r\n                database.ref('.info/connected').on('value', (snapshot) => {\r\n                   \r\n                    if (!!snapshot.val() === false) {\r\n                        return;\r\n                    };\r\n                \r\n                   \r\n                    userStatusDatabaseRef.onDisconnect().set(isOfflineForDatabase).then(()=> {\r\n                       \r\n                        userStatusDatabaseRef.set(isOnlineForDatabase);\r\n                    });\r\n                });\r\n                \r\n                \r\n            }\r\n            else{\r\n                if(userRef){\r\n                    userRef.off();\r\n                }\r\n                if(userStatusDatabaseRef){\r\n                   userStatusDatabaseRef.off();\r\n                }\r\n                database.ref('.info/connected').off();\r\n                setProfile(null);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n\r\n        return ()=>{\r\n            authUnSub();\r\n            database.ref('.info/connected').off();\r\n            if(userRef){\r\n                userRef.off();\r\n            }\r\n        }\r\n    },[]);\r\n    \r\n\r\n    return <profileContext.Provider value={{profile,isLoading}}>\r\n        {children}\r\n    </profileContext.Provider>\r\n}\r\n\r\n\r\nexport const useProfile=()=> useContext(profileContext);","import React from 'react'\r\nimport { Redirect,Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/ProfileContext';\r\n\r\n\r\nconst PrivateRoute = ({children, ...routeprops}) => {\r\n\r\n\r\n    const {profile,isLoading}=useProfile();\r\n\r\n    if(isLoading&&!profile){\r\n        return <Container>\r\n            <Loader center vertical size='md' content='Loading' speed='slow'/>\r\n            </Container>\r\n    }\r\n    \r\n      \r\n\r\n    if(!profile&&!isLoading){\r\n       return <Redirect to='/signin' />\r\n    }\r\n    return (\r\n        <Route {...routeprops}>\r\n         {children}\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { useCallback, useState,useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModuleState(defaultValue=false){\r\nconst [isOpen,setIsOpen]=useState(defaultValue);\r\n\r\nconst open = useCallback(()=>setIsOpen(true),[]); \r\nconst close= useCallback(()=>setIsOpen(false),[]);\r\n\r\nreturn {isOpen,open,close};\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n    const [matches, setMatches] = useState(\r\n      () => window.matchMedia(query).matches\r\n    );\r\n  \r\n    useEffect(() => {\r\n      const queryList = window.matchMedia(query);\r\n      setMatches(queryList.matches);\r\n  \r\n      const listener = evt => setMatches(evt.matches);\r\n  \r\n      queryList.addListener(listener);\r\n      return () => queryList.removeListener(listener);\r\n    }, [query]);\r\n  \r\n    return matches;\r\n  };\r\n\r\n  export function usePresence(uid){\r\n  const [Presence,setPresence]=useState(null);\r\n  \r\n\r\n  useEffect(()=>{\r\n    const userStatusRef=database.ref(`/status/${uid}`);\r\n    userStatusRef.on('value',(snap)=>{\r\n      if(snap.exists){\r\n        const data=snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return()=>{\r\n      userStatusRef.off();\r\n    }\r\n  },[uid])\r\n\r\n  return Presence;\r\n\r\n\r\n  }\r\n\r\n  // Hook\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n\r\n      }\r\n        return () => {\r\n          node.removeEventListener('mouseover', handleMouseOver);\r\n          node.removeEventListener('mouseout', handleMouseOut);\r\n        };\r\n    },\r\n    // eslint-disable-next-line\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, ControlLabel, Form, FormControl, FormGroup, Icon, Modal, Schema } from 'rsuite'\r\nimport firebase from 'firebase/app';\r\nimport { useModuleState } from '../misc/custom-hooks'\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst {StringType}=Schema.Types;\r\n\r\nconst model=Schema.Model({\r\n    name:StringType().isRequired('Chat Name is required'),\r\n    description:StringType().isRequired('Description is required')\r\n})\r\n\r\nconst InitialState={\r\n    name:'',\r\n    description:''\r\n}\r\n\r\nconst CreateChatroomBtn = () => {\r\n    const {isOpen,open,close}=useModuleState();\r\n    const formRef=useRef();\r\n    const [formValue,setFormValue]=useState(InitialState);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n\r\n    const onFormChange=value=>{\r\n        setFormValue(value);\r\n    }\r\n\r\n    const onSubmit=async ()=>{\r\n    if(!formRef.current.check()){\r\n        return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    const newRoomData={\r\n        ...formValue,\r\n        createdAt:firebase.database.ServerValue.TIMESTAMP,\r\n        admins:{\r\n            [auth.currentUser.uid]:true,\r\n        }\r\n    }\r\n\r\n\r\n    try{\r\n        await database.ref('rooms').push(newRoomData);\r\n\r\n        Alert.info(`${formValue.name} has been created`);\r\n        setIsLoading(false);\r\n        setFormValue(InitialState);\r\n\r\n    }catch(err){\r\n        setIsLoading(false);\r\n        Alert.error(err.message,4000);\r\n    }\r\n    }\r\n    return(\r\n        <div className='mt-1'>\r\n            <Button block color='green' onClick={open}>\r\n               <Icon icon='creative'/> Create New Chat Room\r\n            </Button>\r\n\r\n            <Modal show={isOpen} onHide={close}>\r\n\r\n            <Modal.Header>\r\n            <Modal.Title>\r\n            New Chat Room\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form fluid onChange={onFormChange} formValue={formValue} model={model} ref={formRef}>\r\n                <FormGroup>\r\n                    <ControlLabel>Room Name</ControlLabel>\r\n                    <FormControl name='name' placeholder='Enter new chat room name...'/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                    <FormControl componentClass='textarea' rows={5} name='description' placeholder='Enter room description...'/>\r\n                </FormGroup>\r\n            </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button block appearance='primary' onClick={onSubmit} disabled={isLoading}>\r\n                Create New Chat Room\r\n            </Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateChatroomBtn\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite'\r\n\r\nconst EditableInput = ({initialValue,onSave,name,label=null,placeholder='Write your value',emptymsg='Input is Empty',wrapperClassName='',...initalProps}) => {\r\n\r\n    const[input,setInput]=useState(initialValue);\r\n    const[isEditable,setIsEditable]=useState(false);\r\n\r\n    const onInputChange=useCallback((value)=>{\r\n        setInput(value);\r\n    },[])\r\n    const onEditclick=useCallback(()=>{\r\n        setIsEditable(p=>!p);\r\n        setInput(initialValue);\r\n    },[initialValue])\r\n    const onSaveclick=async ()=>{\r\n    const trimmed=input.trim();\r\n    if(trimmed===''){\r\n        Alert.info(emptymsg,4000);\r\n    }\r\n    if(trimmed!==initialValue){\r\n    await onSave(trimmed);\r\n    }\r\n    setIsEditable(false);\r\n    }\r\n    return (\r\n        <div className={wrapperClassName}>\r\n            {label}\r\n            <InputGroup>\r\n            <Input\r\n            {...initalProps}\r\n            disabled={!isEditable}\r\n            placeholder={placeholder}\r\n            emptymsg={emptymsg}\r\n            value={input}\r\n            onChange={onInputChange}\r\n            />\r\n            <InputGroup.Button onClick={onEditclick}>\r\n            <Icon icon={isEditable?'close':'edit2'}/>\r\n            </InputGroup.Button>\r\n            {isEditable &&\r\n            <InputGroup.Button onClick={onSaveclick}> \r\n            <Icon icon='check'/>\r\n            </InputGroup.Button>\r\n            }\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditableInput\r\n","export function getNameInitials(name){\r\n    const splitName=name.toUpperCase().split(' ');\r\n\r\n    if(splitName.length>1){\r\n        return splitName[0][0]+splitName[1][0];\r\n    }\r\n    return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal){\r\n    return snapVal? Object.keys(snapVal) :[];\r\n}\r\n\r\nexport function transformToArrwithId(snapVal){\r\n\r\n    \r\nreturn snapVal?Object.keys(snapVal).map(roomId=>(\r\n {...snapVal[roomId],id:roomId})\r\n)\r\n    \r\n    \r\n:[];\r\n\r\n}\r\n\r\nexport async function getUserUpdate(userId,keyToUpdate,value,db){\r\n     const updates ={};\r\n\r\n     updates[`/profiles/${userId}/${keyToUpdate}`]=value;\r\n\r\n     const getMsgs= db.ref('/messages').orderByChild('author/uid').equalTo(userId).once('value');\r\n     const getRooms =db.ref('/rooms').orderByChild('lastmessage/author/uid').equalTo(userId).once('value');\r\n\r\n     const [mSnap,rSnap] =await Promise.all([getMsgs,getRooms]);\r\n\r\n     mSnap.forEach(msgSnap=>{\r\n         updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`]=value;\r\n     })\r\n     rSnap.forEach(roomSnap=>{\r\n         updates[`/rooms/${roomSnap.key}/lastmessage/author/${keyToUpdate}`]=value;\r\n     })\r\n\r\n     return updates;\r\n}","import React from 'react'\r\nimport { Avatar } from 'rsuite'\r\nimport {getNameInitials} from '../../misc/helper';\r\n\r\nconst ProfileAvatar = ({name,...AvatarProps}) => \r\n    (\r\n        <div>\r\n          <Avatar\r\n          circle {...AvatarProps}\r\n          >\r\n              {getNameInitials(name)}\r\n          </Avatar>\r\n        </div>\r\n    )\r\n\r\n\r\nexport default ProfileAvatar\r\n","import React,{useRef, useState} from 'react'\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor'\r\nimport { useModuleState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/ProfileContext';\r\nimport ProfileAvatar from './ProfileAvatar';\r\nimport {getUserUpdate} from '../../misc/helper'\r\n\r\nconst AvatarUploadBtn = () => {\r\n    const {isOpen, open, close}= useModuleState();\r\n    const {profile}=useProfile();\r\n    const[isLoading,setIsLoading]=useState(false);\r\n\r\n    const [img,setImg]=useState(null);\r\n    const avatarEditorRef=useRef();\r\n\r\n    const getBlob=(canvas)=>\r\n        new Promise((resolve,reject)=>{\r\n            canvas.toBlob(blob=>{\r\n                if(blob){\r\n                    resolve(blob);\r\n                }\r\n                else{\r\n                    reject(new Error ('File process error'));\r\n                }\r\n            })\r\n        })\r\n    \r\n\r\n    const fileInputTypes=\".png, .jpeg, .jpg\";\r\n\r\n    const acceptedFiles=['image/png','image/jpeg','image/pjpeg'];\r\n    const isValidFiles=(file)=>acceptedFiles.includes(file.type);\r\n    const onFileInputChange=(ev)=>{\r\n    const currFiles=ev.target.files;\r\n    if(currFiles.length===1){\r\n    const file=currFiles[0];\r\n    if(isValidFiles(file)){\r\n\r\n        setImg(file);\r\n        open();\r\n    }else{\r\n        Alert.warning(`Wrong file type ${file.type}`);\r\n    }\r\n    }\r\n    }\r\n\r\n    const onUploadClick=async ()=>{\r\n        const canvas=avatarEditorRef.current.getImageScaledToCanvas();\r\n        setIsLoading(true);\r\n\r\n        try{\r\n  \r\n            const blob=await getBlob(canvas);\r\n            const avatarFileRef=storage.ref(`/profiles/${profile.uid}`).child('avatar');\r\n            const uploadAvatarResult=await avatarFileRef.put(blob,{\r\n                cacheControl:`public,max-age=${3600*24*3}`\r\n            })\r\n            const downloadUrl= await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n            const updates= await getUserUpdate(profile.uid,'avatar',downloadUrl,database);\r\n           \r\n            await database.ref().update(updates);\r\n\r\n            Alert.info('Avatar has been uploaded',4000);\r\n            setIsLoading(false);\r\n\r\n        }catch(err){\r\n\r\n            Alert.error(err.message,4000);\r\n            setIsLoading(false);\r\n        }\r\n\r\n\r\n    }\r\n   \r\n    return(\r\n        <div className='mt-3 text-center'>\r\n            <div>\r\n                \r\n                <ProfileAvatar src={profile.avatar} name={profile.name} className='width-200 height-200 img-fullsize font-huge'/>\r\n            \r\n                \r\n                <label htmlFor='avatar-upload' className='d-block cursor-pointer padded'>\r\n                    Select new Avatar\r\n                    <input id='avatar-upload' type='file' className='d-none' accept={fileInputTypes} onChange={onFileInputChange} />\r\n                </label>\r\n\r\n                <Modal show={isOpen} onHide={close}> \r\n                    <Modal.Header>\r\n                        <Modal.Title>\r\n                        Adjust and upload new avatar\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='d-flex justify-content-center align-items-center h-100'>\r\n\r\n                    {img &&\r\n                     <AvatarEditor\r\n                     ref={avatarEditorRef}\r\n                     image={img}\r\n                     width={200}\r\n                     height={200}\r\n                     border={10}\r\n                     borderRadius={100}\r\n                     \r\n                     rotate={0}\r\n                     />\r\n                    }\r\n                    </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button block appearance='ghost' onClick={onUploadClick} disabled={isLoading}>\r\n                            Upload new Avatar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AvatarUploadBtn\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Icon, Tag } from 'rsuite'\r\nimport firebase from 'firebase/app'\r\nimport { auth } from '../../misc/firebase'\r\n\r\nconst ProviderBlock = () => {\r\n    const [isConnected,setIsConnected]=useState({\r\n\r\n        'google.com':auth.currentUser.providerData.some(data=>data.providerId==='google.com'),\r\n        'facebook.com':auth.currentUser.providerData.some(data=>data.providerId==='facebook.com')\r\n\r\n    })\r\n    const updateIsConnected=(providerId,value)=>{\r\n    setIsConnected(p=>\r\n        ({\r\n\r\n        ...p,\r\n        [providerId]:value\r\n        })\r\n    )\r\n    }\r\n    const unlink=async providerId=>{\r\n\r\n        try{\r\n            if(auth.currentUser.providerData.length===1){\r\n            throw new Error (`You can not unlink to ${providerId}`);\r\n            }\r\n            await auth.currentUser.unlink(providerId);\r\n            updateIsConnected(providerId,false);\r\n            Alert.info(`Disconnected from ${providerId}`);\r\n        }catch(err){\r\n            Alert.error(err.message,4000);\r\n        }\r\n   \r\n    }\r\n\r\n    const unlinkFacebook=()=>{\r\n        unlink('facebook.com')\r\n    }\r\n    const unlinkGoogle=()=>{\r\n        unlink('google.com')\r\n    }\r\n\r\n    const link=async provider=>{\r\n        try{\r\n            await auth.currentUser.linkWithPopup(provider);\r\n            Alert.info(`Linked to ${provider.providerId}`,4000);\r\n            updateIsConnected(provider.providerId,true);\r\n        }catch(err){\r\n            Alert.error(err.message,4000);\r\n        }\r\n\r\n    }\r\n    const linkFacebook=()=>{\r\n        link(new firebase.auth.FacebookAuthProvider());\r\n    }\r\n    const linkGoogle=()=>{\r\n        link(new firebase.auth.GoogleAuthProvider());\r\n    }\r\n    return (\r\n        <div>\r\n            {  isConnected['google.com'] &&\r\n            <Tag color='green' closable onClose={unlinkGoogle}>\r\n                <Icon icon='google'/> Connected\r\n            </Tag>\r\n            }\r\n            {isConnected['facebook.com']&&\r\n            <Tag color='blue' closable onClose={unlinkFacebook}>\r\n                <Icon icon='facebook'/> Connected\r\n            </Tag>\r\n            }\r\n            \r\n            <div className='mt-2'>\r\n            {!isConnected['google.com']&&\r\n            <Button block color='green' onClick={linkGoogle}>\r\n               <Icon icon='google'/> Link to Google\r\n            </Button>\r\n            }\r\n            {!isConnected['facebook.com']&&\r\n            <Button block color='blue' onClick={linkFacebook}>\r\n               <Icon icon='facebook'/> Link to Facebook\r\n            </Button>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProviderBlock\r\n","import React from 'react'\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite'\r\nimport {useProfile} from '../../context/ProfileContext'; \r\nimport { database } from '../../misc/firebase';\r\nimport EditableInput from '../EditableInput';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport {getUserUpdate} from '../../misc/helper'\r\n\r\nconst Dashboard = ({onSignout}) => {\r\nconst {profile} =useProfile();\r\nconst onSave=async newData=>{\r\n\r\n    \r\n    try{\r\n    \r\n\r\nconst updates= await getUserUpdate(profile.uid,'name',newData,database);\r\n\r\nawait database.ref().update(updates);\r\n\r\n    Alert.success('Nickname has been updated',4000);\r\n    }catch(err){\r\n    Alert.error(err.message,4000);\r\n    }\r\n};\r\n    return(\r\n      <>\r\n      <Drawer.Header>\r\n          <Drawer.Title>\r\n              Dashboard\r\n          </Drawer.Title>\r\n      </Drawer.Header>\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock/>\r\n        <Divider/>\r\n        <EditableInput  \r\n        name='nickname'\r\n        initialValue={profile.name}\r\n        onSave={onSave}\r\n        label={<h6 className='mb-2'>Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n        \r\n      </Drawer.Body>\r\n      <Drawer.Footer>\r\n          <Button block color='red' onClick={onSignout}>\r\n              Sign Out\r\n          </Button>\r\n      </Drawer.Footer>\r\n      </>\r\n    );\r\n    }\r\n\r\n\r\nexport default Dashboard\r\n","import React,{useCallback} from 'react'\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite'\r\nimport Dashboard from '.'\r\nimport { isOfflineForDatabase } from '../../context/ProfileContext'\r\nimport { useModuleState,useMediaQuery } from '../../misc/custom-hooks'\r\nimport { auth, database } from '../../misc/firebase'\r\n\r\nconst DashboardToggle = () => {\r\n    const {isOpen,open,close} =useModuleState();\r\n    const isMobile= useMediaQuery('(max-width:992px)');\r\n\r\n    const onSignout=useCallback(() => {\r\n\r\n        database.ref(`status/${auth.currentUser.uid}`).set(isOfflineForDatabase).then(()=> {\r\n            auth.signOut();\r\n\r\n            Alert.info('Signed Out',4000);\r\n\r\n            close();\r\n    \r\n        }).catch(err=>{\r\n            Alert.error(err.message,4000);\r\n        })\r\n            \r\n        \r\n\r\n            \r\n        },\r\n        [close],\r\n    );\r\n   \r\n    return(\r\n        <>\r\n        <Button block color='blue' onClick={open}>\r\n            <Icon icon='dashboard'/> Dashboard\r\n        </Button>\r\n        <Drawer full={isMobile} show={isOpen} onHide={close} placement='left'>\r\n            <Dashboard onSignout={onSignout}/>\r\n        </Drawer>   \r\n        </>\r\n    )\r\n    }\r\n\r\nexport default DashboardToggle;\r\n","import React,{createContext, useContext, useEffect,useState} from 'react'\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrwithId } from '../misc/helper';\r\n\r\nconst roomContext=createContext();\r\n\r\nexport const RoomProvider=({children})=>{\r\n\r\n    const[rooms,setRooms]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        const roomsRef=database.ref('rooms');\r\n\r\n        roomsRef.on('value',(snap)=>{\r\n           const data=transformToArrwithId(snap.val());\r\n           setRooms(data);\r\n        })\r\n\r\n        return()=>{\r\n            roomsRef.off();\r\n        }\r\n    })\r\n\r\n    return <roomContext.Provider value={rooms}>\r\n        {children}\r\n    </roomContext.Provider>\r\n}\r\n\r\nexport const useRooms=()=> useContext(roomContext);","import React from 'react'\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../dashboard/ProfileAvatar'\r\n\r\n\r\nconst RoomItem = ({room}) => {\r\n    const {createdAt,name,lastmessage}=room;\r\n    return(\r\n        <div>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n            <h3 className='text-disappear'>{name}</h3>\r\n            \r\n            <TimeAgo className='font-normal text-black-45'\r\n  datetime={lastmessage ? new Date(lastmessage.createdAt) : new Date(createdAt)}/>\r\n            </div>\r\n\r\n            <div className='d-flex align-items-center text-black-70'>\r\n                {\r\n                    lastmessage?\r\n                    <>\r\n                    <div className='d-flex align-items-center'>\r\n                    <ProfileAvatar src={lastmessage.author.avatar} name={lastmessage.author.name} size='sm' />\r\n                    </div>\r\n\r\n                    <div className='text-disappear ml-2'>\r\n                        <div className='italic'>{lastmessage.author.name}</div>\r\n                        <span>{lastmessage.text}</span>\r\n                    </div>\r\n\r\n                    \r\n                    </>:\r\n                \r\n                <span>No messages yet...</span>\r\n                }             \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RoomItem\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Loader, Nav } from 'rsuite'\r\nimport { useRooms } from '../../context/RoomsContext'\r\nimport RoomItem from './RoomItem'\r\n\r\nconst ChatRoomList = ({aboveElHeight}) => {\r\n\r\n    const location=useLocation();\r\n    const rooms=useRooms();\r\n    return(\r\n        <Nav \r\n        appearance='subtle'\r\n        vertical\r\n        reversed\r\n        className='overflow-y-scroll custom-scroll'\r\n        style={{\r\n            height: `calc(100% - ${aboveElHeight}px)`\r\n        }}\r\n        activeKey={location.pathname}\r\n        >\r\n        {!rooms&& <Loader center vertical content='Loading' speed='slow' size='md'/>}\r\n        {rooms&& rooms.length>0&& rooms.map(room=><Nav.Item  componentClass={Link} to={`/chat/${room.id}`} eventKey={`/chat/${room.id}`} key={room.id}>\r\n            <RoomItem room={room} />\r\n        </Nav.Item>)}\r\n        \r\n        </Nav>\r\n    )\r\n}\r\n\r\n\r\nexport default ChatRoomList\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Divider } from 'rsuite';\r\nimport CreateChatroomBtn from './CreateChatroomBtn';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const topSidebarRef=useRef();\r\n    const[height,setHeight]=useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(topSidebarRef.current){\r\n            setHeight(topSidebarRef.current.scrollHeight);\r\n        }\r\n    },[topSidebarRef])\r\n    \r\n\r\n\r\n    return(\r\n        <div className='h-100 pt-2'>\r\n<div ref={topSidebarRef}>\r\n    <DashboardToggle />\r\n    <CreateChatroomBtn/>\r\n    <Divider>Join Conversation</Divider>\r\n    \r\n</div>\r\n<ChatRoomList aboveElHeight={height}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport {createContext, useContextSelector} from 'use-context-selector'\r\n\r\nconst CurrentRoomContext=createContext();\r\n\r\nexport const CurrentRoomProvider=({children,data})=>\r\n    <CurrentRoomContext.Provider value={data} >\r\n        {children}\r\n    </CurrentRoomContext.Provider>\r\n\r\n\r\nexport const useCurrentroom = selector=>useContextSelector(CurrentRoomContext,selector);","// import { format } from 'prettier';\r\nimport React,{memo} from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite'\r\n// import { useContextUpdate } from 'use-context-selector';\r\nimport { useCurrentroom } from '../../../context/CurrentRoom.context';\r\nimport { useMediaQuery, useModuleState } from '../../../misc/custom-hooks'\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../EditableInput';\r\n\r\n\r\nconst EditRoomDrawer = () => {\r\n\r\nconst {isOpen,close,open}=useModuleState();\r\n\r\nconst {chatId}=useParams();\r\n\r\nconst isMobile= useMediaQuery('(max-width:992px)');\r\n\r\nconst name= useCurrentroom(v=>v.name);\r\nconst description=useCurrentroom(v=>v.description);\r\n\r\nconst update=(key,value)=>{\r\n    database.ref(`/rooms/${chatId}`).child(key).set(value).then(()=>{\r\n        Alert.success('Successfully Updated',4000);\r\n    }).catch(err=>{\r\n        Alert.error(err.message,4000);\r\n    })\r\n}\r\n\r\nconst onNameSave=(newName)=>{\r\nupdate('name',newName);\r\n}\r\nconst onDescSave=(newDesc)=>{\r\nupdate('description',newDesc);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Button className='br-circle' size='sm' color='red' onClick={open}>\r\n                A\r\n            </Button>\r\n\r\n            <Drawer full={isMobile} show={isOpen} onHide={close} placement='right'>\r\n                <Drawer.Header>\r\n                    <Drawer.Title>\r\n                        Edit Room\r\n                    </Drawer.Title>\r\n                </Drawer.Header>\r\n                <Drawer.Body>\r\n                <EditableInput\r\n                initialValue={name}\r\n                label={<h6 className='mb-2'>Name</h6>}\r\n                emptyMsg='Name cannot be empty'\r\n                onSave={onNameSave}\r\n                />\r\n                <EditableInput\r\n                componentClass='textarea'\r\n                rows={5}\r\n                initialValue={description}\r\n                emptymsg='description cannot be empty'\r\n                wrapperClassName='mt-3'\r\n                onSave={onDescSave}\r\n                />\r\n                </Drawer.Body>\r\n                <Drawer.Footer>\r\n                    <Button block onClick={close} >\r\n                        close\r\n                    </Button>\r\n                </Drawer.Footer>\r\n\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditRoomDrawer);\r\n","import React,{memo} from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentroom } from '../../../context/CurrentRoom.context'\r\nimport { useModuleState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n\r\n    const description = useCurrentroom(v=>v.description);\r\n    const name =useCurrentroom(v=>v.name);\r\n    const {isOpen,open,close} =useModuleState();\r\n    return (\r\n        <>\r\n            <Button appearance='link' className='px-0' onClick={open} >\r\n                Room Information\r\n            </Button>\r\n            <Modal show={isOpen} onHide={close}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        About {name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <h6 className='mb-1'>Description</h6>\r\n                <p>{description}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block onClick={close}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(RoomInfoBtnModal)\r\n","import React,{memo} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentroom } from '../../../context/CurrentRoom.context'\r\nimport {useMediaQuery} from '../../../misc/custom-hooks';\r\nimport EditRoomDrawer from './EditRoomDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\n\r\nconst   Top = () => {\r\n    const name= useCurrentroom(v => v.name);\r\n    const isAdmin =useCurrentroom(v=>v.isAdmin);\r\n    const isMobile= useMediaQuery('(max-width:992px)');\r\n    return(\r\n        <div>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n\r\n<h4 className='text-disappear d-flex align-items-center'>\r\n<Icon componentClass={Link} to='/' icon='arrow-circle-left' size='2x' className={isMobile ?'d-inline-block p-0 mr-2 text-blue link-unstyled':'d-none'} />\r\n            <span className='text-disappear'>{name}</span>\r\n</h4>\r\n            <ButtonToolbar className='ws-nowrap'>\r\n                {isAdmin && \r\n                <EditRoomDrawer/>\r\n}\r\n                </ButtonToolbar>\r\n            </div>\r\n            \r\n            <div className='d-flex justify-content-between align-items-center'>\r\n            <span>todo</span>\r\n            <RoomInfoBtnModal/>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\nexport default memo(Top);\r\n","\r\nimport React from 'react'\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\n\r\n\r\nconst getColor=(presence)=>{\r\n    if(!presence){\r\n    return 'gray';\r\n    }\r\n    switch(presence.state){\r\n        case 'online':\r\n            return 'green';\r\n        case 'offline':\r\n            return 'red';\r\n        default:\r\n            return 'gray';\r\n    }\r\n    \r\n}\r\n\r\nconst getText=(presence)=>{\r\nif(!presence){\r\n    return 'Unknown user';\r\n}\r\n\r\nreturn presence.state === 'online' ?'Online': `Last Online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n}\r\n\r\nconst PresenceDot = ({uid}) => {\r\n\r\n    const presence=usePresence(uid);\r\n    return (\r\n        <Whisper placement=\"top\" trigger=\"hover\" speaker={ <Tooltip>\r\n        {getText(presence)}\r\n\r\n          </Tooltip>}>\r\n      \r\n      <Badge  className='cursor-pointer' style={{backgroundColor:getColor(presence)}} />\r\n    </Whisper>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default PresenceDot;\r\n","import React from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport {useModuleState} from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../dashboard/ProfileAvatar';\r\n\r\nconst ProfileBtnModal = ({profile,children,...btnProps}) => {\r\n\r\n    const {isOpen,close,open} = useModuleState();\r\n\r\n    const {name, avatar, createdAt} = profile\r\n\r\nconst shortName=name.split(' ')[0];\r\n\r\nconst memberSince= new Date(createdAt).toLocaleDateString();\r\n\r\n    return (\r\n        <div>\r\n           <Button {...btnProps} onClick={open}>\r\n               {shortName}\r\n           </Button>\r\n\r\n           <Modal show={isOpen} onHide={close} >\r\n               <Modal.Header>\r\n                   <Modal.Title>\r\n                       {shortName} profile\r\n                   </Modal.Title>\r\n               </Modal.Header>\r\n               <Modal.Body className='text-center'>\r\n\r\n                   <ProfileAvatar src={avatar} name={name} className='width-200 height-200 img-fullsize font-huge'/>\r\n\r\n                   <h4 className='mt-2'>{name} </h4>\r\n\r\n                   <p>Member Since {memberSince}</p>\r\n                 \r\n               </Modal.Body>\r\n               <Modal.Footer>\r\n                   {children}\r\n                   <Button block onClick={close} >close</Button>\r\n               </Modal.Footer>\r\n           </Modal>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileBtnModal\r\n","import React, { Children } from 'react'\r\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite'\r\n\r\nconst ConditionBadge= ({condition,children})=>(\r\ncondition ? <Badge content={condition} >{Children}</Badge> : children\r\n)\r\n\r\n\r\nconst IconBtnControl = ( {isVisible, iconName, tooltip,onClick, badgeContent, ...props }) => \r\n    \r\n         (\r\n        <div className='ml-2'  style={{visibility:isVisible?'visible':'hidden'}} >\r\n\r\n        <ConditionBadge condition={badgeContent}>\r\n        <Whisper\r\n        placement='top'\r\n        delay={0}\r\n        delayHide={0}\r\n        delayShow={0}\r\n        trigger='hover'\r\n        speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n\r\n\r\n        <IconButton  \r\n        {...props}\r\n        onClick={onClick}\r\n        circle\r\n        size='xs'\r\n        icon={<Icon icon={iconName} />}\r\n        />\r\n\r\n        \r\n        </Whisper>\r\n        </ConditionBadge>\r\n            \r\n        </div>\r\n        )\r\n    \r\n    \r\n\r\n\r\nexport default IconBtnControl\r\n","import React from 'react'\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentroom } from '../../../context/CurrentRoom.context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { auth } from '../../../misc/firebase';\r\nimport ProfileAvatar from '../../dashboard/ProfileAvatar';\r\n import PresenceDot from '../../PresenceDot';\r\nimport ProfileBtnModal from './ProfileBtnModal';\r\nimport IconBtnControl from './IconBtnControl';\r\n\r\nconst MessageItem = ({message,handleAdmin,handleLike}) => {\r\n\r\n\r\n    const {author, createdAt, text,likes,likeCount}=message;\r\n\r\n    const [selfRef,isHovered]=useHover();\r\n\r\n    const isAdmin= useCurrentroom(v=>v.isAdmin);\r\n    const admins=useCurrentroom(v=>v.admins);\r\n\r\n    const isMobile=useMediaQuery('(max-width:992px)');\r\n\r\n    const isMsgAuthAdmin= admins.includes(author.uid);\r\n\r\n    const isAuthor= auth.currentUser.uid===author.uid;\r\n\r\n    const canGrantAdmin= isAdmin && !isAuthor;\r\n\r\n    const isLiked=likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n    const canShowIcon=isMobile ||isHovered;\r\n\r\n    return (\r\n        <li className={`padded mb-1 cursor-pointer ${isHovered?'bg-black-02':''} `} ref={selfRef} >\r\n            \r\n            <div className='d-flex align-items-center font-bolder mb-1'>\r\n\r\n                <PresenceDot  uid={author.uid} />\r\n            <ProfileAvatar src={author.avatar} name={author.name} className='ml-1' size='xs' />\r\n\r\n           \r\n            <ProfileBtnModal profile={author} appearance='link' className='p-0 ml-1 text-black'>\r\n{canGrantAdmin &&\r\n<Button onClick={()=>handleAdmin(author.uid)} color='blue' block>\r\n{isMsgAuthAdmin ? 'Remove Admin' :'Make Admin'}\r\n</Button>\r\n}\r\n                </ProfileBtnModal>\r\n\r\n            <TimeAgo className='font-normal text-black-45 ml-2'\r\n  datetime={createdAt}/>\r\n\r\n  <IconBtnControl  \r\n  {...(isLiked?{color:'red'}:{})}\r\n  isVisible={canShowIcon}\r\n  iconName='heart'\r\n  tooltip='Like this message'\r\n  onClick={()=>handleLike(message.id)}\r\n  badgeContent={likeCount}\r\n  />\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <span className='word-break-all'>{text}</span>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MessageItem\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Alert } from 'rsuite';\r\nimport { auth, database } from '../../../misc/firebase';\r\nimport { transformToArrwithId } from '../../../misc/helper';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst Message = () => {\r\n\r\n    const {chatId}=useParams();\r\n const [messages,setMessages]=useState();\r\n\r\n const isChatEmpty=messages && messages.length===0;\r\n const canShowChat= messages && messages.length>0;\r\n\r\n\r\n    useEffect(()=>{\r\n        const mesgRef=database.ref('/messages');\r\n        \r\n        mesgRef.orderByChild('roomId').equalTo(chatId).on('value' ,snap=>{\r\n            const data=transformToArrwithId(snap.val());\r\n\r\n            setMessages(data);\r\n        } );\r\n\r\n        return ()=>{\r\n            mesgRef.off('value');\r\n        };\r\n    },[chatId]);\r\n\r\n    const handleAdmin=useCallback(async (uid)=>{\r\n        let alertMsg;\r\n        const adminsRef= database.ref(`/rooms/${chatId}/admins`);\r\n        await adminsRef.transaction((admin)=>{\r\n            if (admin) {\r\n                if (admin[uid]) {\r\n                  admin[uid]=null;\r\n                  alertMsg='Removed as Admin'\r\n                } else {\r\n                 admin[uid]=true;\r\n                 alertMsg='Admin Permission Granted'\r\n                }\r\n                Alert.info(alertMsg,4000);\r\n              }\r\n              \r\n              return admin;\r\n        })\r\n        \r\n    },[chatId])\r\n\r\n    const handleLike=useCallback(async (msgId)=>{\r\n        let alertMsg;\r\n        const {uid}=auth.currentUser;\r\n        const msgRef= database.ref(`/messages/${msgId}`);\r\n        await msgRef.transaction(msg=>{\r\n            if (msg) {\r\n                if (msg.likes&& msg.likes[uid]) {\r\n                  msg.likeCount-=1;\r\n                  msg.likes[uid]=null;\r\n                  alertMsg='Like Removed'\r\n                } else {\r\n\r\n\r\n                    msg.likeCount+=1;\r\n                    if(!msg.likes){\r\n                        msg.likes={}\r\n                    }\r\n                 msg.likes[uid]=true;\r\n                 alertMsg='Like added'\r\n                }\r\n                Alert.info(alertMsg,4000);\r\n              }\r\n              \r\n              return msg;\r\n    })\r\n},[])\r\n   \r\n\r\n    \r\n\r\n    return(\r\n        <ul className='msg-list custom-scroll'>\r\n        {isChatEmpty && <li>No Message Yet</li>}\r\n        {canShowChat && messages.map(msg=> <MessageItem  key={msg.id} message={msg} handleAdmin={handleAdmin} handleLike={handleLike} />)}\r\n        </ul>\r\n    )\r\n    }\r\n\r\n\r\n\r\nexport default Message\r\n","import React, { useState,useCallback } from 'react'\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite'\r\nimport firebase from  'firebase/app'\r\nimport { useParams } from 'react-router';\r\nimport {useProfile} from '../../../context/ProfileContext';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nfunction assembleMsg(profile,chatId){\r\n    return {\r\n        roomId:chatId,\r\n        author:{\r\n            name:profile.name,\r\n            uid:profile.uid,\r\n            createdAt:profile.createdAt,\r\n            ...(profile.avatar?{avatar:profile.avatar}:{}),\r\n            \r\n        },\r\n        likeCount:0,\r\n        \r\n        createdAt:firebase.database.ServerValue.TIMESTAMP\r\n    }\r\n}\r\n\r\n\r\nconst Bottom = () => {\r\n\r\n    const [input,setInput]=useState('');\r\n    const[isLoading,setIsLoading]=useState(false);\r\n    const {profile}=useProfile();\r\n    const {chatId}=useParams();\r\n\r\n    const onInputChange=useCallback((value)=>{\r\nsetInput(value);\r\n    },[])\r\n\r\n    \r\n\r\n    const onSendClick=async ()=>{\r\n        if(input.trim===''){\r\n            return;\r\n        }\r\n        const msgData=assembleMsg(profile,chatId);\r\n        msgData.text=input;\r\n\r\n        const updates={};\r\n\r\n        const messageId=database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`]=msgData;\r\n        updates[`/rooms/${chatId}/lastmessage`]={\r\n            ...msgData,\r\n            msgId:messageId,\r\n        }\r\n        setIsLoading(true);\r\n        try{\r\n        await database.ref().update(updates);\r\n        setInput('');\r\n        setIsLoading(false);\r\n        }catch(err){\r\n            setIsLoading(false);\r\n            Alert.error(err.message,4000);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const onKeyDown=(ev)=>{\r\nif(ev.keyCode===13){\r\n    ev.preventDefault();\r\n    onSendClick();\r\n}\r\n    }\r\n\r\n return(\r\n        <div>\r\n            \r\n            <InputGroup>\r\n            <Input placeholder='Write new message here...' value={input} onChange={onInputChange} onKeyDown={onKeyDown}/>\r\n            <InputGroup.Button color='blue' appearance='primary' onClick={onSendClick} disabled={isLoading}  >\r\n            <Icon icon='send'/>\r\n            </InputGroup.Button>\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bottom\r\n","import React from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport Messages from '../../components/chat-window/message';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport {useRooms} from '../../context/RoomsContext';\r\nimport { CurrentRoomProvider } from '../../context/CurrentRoom.context';\r\nimport { transformToArr } from '../../misc/helper';\r\nimport { auth } from '../../misc/firebase';\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    const{chatId} =useParams();\r\n\r\n    const rooms= useRooms();\r\n    if(!rooms){\r\n\r\n       return <Loader center vertical size='md' content='Loading' speed='slow'/>\r\n    }\r\n\r\n    const currentRoom= rooms.find(room=>room.id===chatId);\r\n\r\n    if(!currentRoom){\r\n        return <h6 className='text-center mt-page'>Chat {chatId} not found</h6>\r\n    }\r\n    const {name,description} =currentRoom;\r\n\r\n    const admins= transformToArr(currentRoom.admins);\r\n\r\n    const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n\r\n   const currentRoomData={\r\n   name,\r\n   description,\r\n   admins,\r\n   isAdmin\r\n   };\r\n\r\n    return(\r\n        <CurrentRoomProvider data={currentRoomData}>\r\n            <div className='chat-top'>\r\n                <ChatTop/>\r\n            </div>\r\n            <div className='chat-middle'>\r\n                <Messages/>\r\n            </div>\r\n            <div className='chat-bottom'>\r\n                <ChatBottom/>\r\n            </div>\r\n        </CurrentRoomProvider>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite'\r\nimport { Route } from 'react-router-dom';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomProvider } from '../../context/RoomsContext';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n\r\n    const isDesktop=useMediaQuery('(min-width:992px)');\r\n    const {isExact}=useRouteMatch();\r\n\r\n    const canSidebarRender=isDesktop || isExact;\r\n    return(  \r\n    <RoomProvider>\r\n <Grid fluid className='h-100'>\r\n        <Row className='h-100'>\r\n            {canSidebarRender &&\r\n            <Col xs={24} md={8} className='h-100' >\r\n                <Sidebar />\r\n            \r\n            </Col>\r\n            }\r\n\r\n            <Switch>\r\n                <Route exact path='/chat/:chatId'>\r\n                    <Col xs={24} md={16} className='h-100'>\r\n                        <Chat/>\r\n                    </Col>\r\n                </Route>\r\n            </Switch>\r\n            <Route>\r\n                {isExact && \r\n                <Col xs={24} md={16} className='h-100'>\r\n                <h6 className='text-center mt-page'>Please Select Chat</h6>\r\n                </Col>\r\n                }\r\n            </Route>\r\n        </Row>\r\n        </Grid> \r\n    </RoomProvider>\r\n   \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport{Redirect,Route} from 'react-router'\r\n\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/ProfileContext';\r\n\r\n\r\nconst PublicRouter = ({children,...routeprops}) => {\r\n    const {profile,isLoading}=useProfile();\r\n\r\n\r\n    if(isLoading&&!profile){\r\n        return <Container>\r\n            <Loader center vertical size='md' content='Loading' speed='slow'/>\r\n            </Container>\r\n    }\r\n    \r\n    \r\n    if(profile&&!isLoading){\r\n       return <Redirect to='/' />\r\n    }\r\n    return (\r\n        \r\n   \r\n        <Route {...routeprops}>\r\n         {children}\r\n        </Route>\r\n    \r\n    )\r\n}\r\n\r\nexport default PublicRouter\r\n","import React from 'react';\r\n\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport { Switch} from 'react-router';\r\nimport './styles/main.scss';\r\nimport Signin from './pages/Signin';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Home from './pages/Home';\r\nimport PublicRouter from './components/PublicRouter';\r\nimport { ProfileProvider } from './context/ProfileContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <ProfileProvider>\r\n <Switch>\r\n    <PublicRouter path='/signin'>\r\n      <Signin/>\r\n    </PublicRouter>\r\n    <PrivateRoute path='/'>\r\n      <Home />\r\n    </PrivateRoute>\r\n    </Switch>\r\n    </ProfileProvider>\r\n   \r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n<App />\r\n</BrowserRouter>\r\n ,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}